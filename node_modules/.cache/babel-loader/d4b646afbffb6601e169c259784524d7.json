{"ast":null,"code":"var _jsxFileName = \"/Users/EricMac/Desktop/bootcamp/other_projects/Memory-Game/029-build-a-memory-game-using-react-hooks/src/components/card/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css'; // creat a function that gives use access to the props directly\n\nexport default function Card(_ref) {\n  var handleClick = _ref.handleClick,\n      id = _ref.id,\n      type = _ref.type,\n      flipped = _ref.flipped,\n      height = _ref.height,\n      width = _ref.width;\n  return React.createElement(\"div\", {\n    // create a class name based on its flip status\n    className: \"flip-container \".concat(flipped ? 'flipped' : ''),\n    style: {\n      width: width,\n      height: height\n    } // on click event that passes the id of the card we are flipping\n    ,\n    onClick: function onClick() {\n      return handleClick(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flipper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      height: height,\n      width: width\n    }\n    /* will change class name and src depening on if the card \n       is on the front or back*/\n    ,\n    className: flipped ? 'front' : 'back',\n    src: flipped ? \"\".concat(type, \".png\") : \"/img/back.png\",\n    al: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n} // object with all the props\n\nCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  flipped: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/EricMac/Desktop/bootcamp/other_projects/Memory-Game/029-build-a-memory-game-using-react-hooks/src/components/card/index.jsx"],"names":["React","PropTypes","Card","handleClick","id","type","flipped","height","width","propTypes","func","isRequired","number","bool","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP,C,CAEA;;AACA,eAAe,SAASC,IAAT,OAEZ;AAAA,MADCC,WACD,QADCA,WACD;AAAA,MADcC,EACd,QADcA,EACd;AAAA,MADkBC,IAClB,QADkBA,IAClB;AAAA,MADwBC,OACxB,QADwBA,OACxB;AAAA,MADiCC,MACjC,QADiCA,MACjC;AAAA,MADyCC,KACzC,QADyCA,KACzC;AACC,SAAO;AACH;AACA,IAAA,SAAS,2BAAoBF,OAAO,GAAG,SAAH,GAAe,EAA1C,CAFN;AAGH,IAAA,KAAK,EAAE;AACHE,MAAAA,KAAK,EAALA,KADG;AACID,MAAAA,MAAM,EAANA;AADJ,KAHJ,CAMH;AANG;AAOH,IAAA,OAAO,EAAE;AAAA,aAAMJ,WAAW,CAACC,EAAD,CAAjB;AAAA,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUH;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,MAAM,EAANA,MADG;AACKC,MAAAA,KAAK,EAALA;AADL;AAGP;;AAJJ;AAMI,IAAA,SAAS,EAAEF,OAAO,GAAG,OAAH,GAAa,MANnC;AAOI,IAAA,GAAG,EAAEA,OAAO,aAAMD,IAAN,2BAPhB;AAQI,IAAA,EAAE,MARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVG,CAAP;AAuBH,C,CACD;;AACAH,IAAI,CAACO,SAAL,GAAiB;AACbN,EAAAA,WAAW,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADf;AAEbP,EAAAA,EAAE,EAAEH,SAAS,CAACW,MAAV,CAAiBD,UAFR;AAGbL,EAAAA,OAAO,EAAEL,SAAS,CAACY,IAAV,CAAeF,UAHX;AAIbN,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBH,UAJV;AAKbJ,EAAAA,MAAM,EAAEN,SAAS,CAACW,MAAV,CAAiBD,UALZ;AAMbH,EAAAA,KAAK,EAAEP,SAAS,CAACW,MAAV,CAAiBD;AANX,CAAjB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './styles.css'\n\n// creat a function that gives use access to the props directly\nexport default function Card({ \n    handleClick, id, type, flipped, height, width \n}) {\n    return <div\n        // create a class name based on its flip status\n        className={`flip-container ${flipped ? 'flipped' : ''}`}\n        style={{\n            width, height\n        }}\n        // on click event that passes the id of the card we are flipping\n        onClick={() => handleClick(id)}\n    >\n        {/* a div the will hold the image  */}\n        <div className=\"flipper\">\n            <img\n                style={{\n                    height, width\n                }}\n                /* will change class name and src depening on if the card \n                   is on the front or back*/\n                className={flipped ? 'front' : 'back'}\n                src={flipped ? `${type}.png` : `/img/back.png`}\n                al\n            />\n        </div>\n    </div>\n}\n// object with all the props\nCard.propTypes = {\n    handleClick: PropTypes.func.isRequired,\n    id: PropTypes.number.isRequired,\n    flipped: PropTypes.bool.isRequired,\n    type: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n}"]},"metadata":{},"sourceType":"module"}