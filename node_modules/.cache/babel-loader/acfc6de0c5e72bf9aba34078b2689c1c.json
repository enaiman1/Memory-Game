{"ast":null,"code":"var _jsxFileName = \"/Users/EricMac/Desktop/bootcamp/other_projects/Memory-Game/029-build-a-memory-game-using-react-hooks/src/components/card/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css'; // creat a function that gives use access to the props directly\n\nexport default function Card(_ref) {\n  var handleClick = _ref.handleClick,\n      id = _ref.id,\n      type = _ref.type,\n      flipped = _ref.flipped,\n      solved = _ref.solved,\n      height = _ref.height,\n      width = _ref.width,\n      disabled = _ref.disabled;\n  return React.createElement(\"div\", {\n    // create a class name based on its flip status\n    className: \"flip-container \".concat(flipped ? 'flipped' : ''),\n    style: {\n      width: width,\n      height: height\n    } // on click event that passes the id of the card we are flipping\n    ,\n    onClick: function onClick() {\n      return disabled ? null : handleClick(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flipper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      height: height,\n      width: width\n    }\n    /* will change class name and src depening on if the card \n       is on the front or back*/\n    ,\n    className: flipped ? 'front' : 'back',\n    src: flipped || solved ? \"/img/\".concat(type, \".png\") : \"/img/back.png\" // alt=\"\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n} // object with all the props\n\nCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  flipped: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/EricMac/Desktop/bootcamp/other_projects/Memory-Game/029-build-a-memory-game-using-react-hooks/src/components/card/index.jsx"],"names":["React","PropTypes","Card","handleClick","id","type","flipped","solved","height","width","disabled","propTypes","func","isRequired","number","bool","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP,C,CAEA;;AACA,eAAe,SAASC,IAAT,OASZ;AAAA,MARCC,WAQD,QARCA,WAQD;AAAA,MAPCC,EAOD,QAPCA,EAOD;AAAA,MANCC,IAMD,QANCA,IAMD;AAAA,MALCC,OAKD,QALCA,OAKD;AAAA,MAJCC,MAID,QAJCA,MAID;AAAA,MAHCC,MAGD,QAHCA,MAGD;AAAA,MAFCC,KAED,QAFCA,KAED;AAAA,MADCC,QACD,QADCA,QACD;AACC,SAAO;AACH;AACA,IAAA,SAAS,2BAAoBJ,OAAO,GAAG,SAAH,GAAe,EAA1C,CAFN;AAGH,IAAA,KAAK,EAAE;AACHG,MAAAA,KAAK,EAALA,KADG;AACID,MAAAA,MAAM,EAANA;AADJ,KAHJ,CAMH;AANG;AAOH,IAAA,OAAO,EAAE;AAAA,aAAME,QAAQ,GAAE,IAAF,GAASP,WAAW,CAACC,EAAD,CAAlC;AAAA,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUH;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,MAAM,EAANA,MADG;AACKC,MAAAA,KAAK,EAALA;AADL;AAGP;;AAJJ;AAMI,IAAA,SAAS,EAAEH,OAAO,GAAG,OAAH,GAAa,MANnC;AAOI,IAAA,GAAG,EAAEA,OAAO,IAAIC,MAAX,kBAA4BF,IAA5B,2BAPT,CAQI;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVG,CAAP;AAuBH,C,CACD;;AACAH,IAAI,CAACS,SAAL,GAAiB;AACbR,EAAAA,WAAW,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADf;AAEbT,EAAAA,EAAE,EAAEH,SAAS,CAACa,MAAV,CAAiBD,UAFR;AAGbP,EAAAA,OAAO,EAAEL,SAAS,CAACc,IAAV,CAAeF,UAHX;AAIbR,EAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBH,UAJV;AAKbL,EAAAA,MAAM,EAAEP,SAAS,CAACa,MAAV,CAAiBD,UALZ;AAMbJ,EAAAA,KAAK,EAAER,SAAS,CAACa,MAAV,CAAiBD,UANX;AAObH,EAAAA,QAAQ,EAAET,SAAS,CAACc,IAAV,CAAeF;AAPZ,CAAjB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './styles.css'\n\n// creat a function that gives use access to the props directly\nexport default function Card({ \n    handleClick,\n    id, \n    type, \n    flipped,\n    solved,\n    height, \n    width, \n    disabled \n}) {\n    return <div\n        // create a class name based on its flip status\n        className={`flip-container ${flipped ? 'flipped' : ''}`}\n        style={{\n            width, height\n        }}\n        // on click event that passes the id of the card we are flipping\n        onClick={() => disabled? null : handleClick(id)}\n    >\n        {/* a div the will hold the image  */}\n        <div className=\"flipper\">\n            <img\n                style={{\n                    height, width\n                }}\n                /* will change class name and src depening on if the card \n                   is on the front or back*/\n                className={flipped ? 'front' : 'back'}\n                src={flipped || solved ? `/img/${type}.png` : `/img/back.png`}\n                // alt=\"\"\n            />\n        </div>\n    </div>\n}\n// object with all the props\nCard.propTypes = {\n    handleClick: PropTypes.func.isRequired,\n    id: PropTypes.number.isRequired,\n    flipped: PropTypes.bool.isRequired,\n    type: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    disabled: PropTypes.bool.isRequired\n}"]},"metadata":{},"sourceType":"module"}